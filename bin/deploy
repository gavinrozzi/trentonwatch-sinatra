#!/bin/bash

set -e

# Make sure we're in the right directory:
cd "$(dirname ${BASH_SOURCE[0]})"/..

if [ "$1" = "--only-build" ]
then
    ONLY_BUILD=1
fi

BUILD_DIR="build/$(date +'%Y-%m-%dT%H-%M-%S')"
mkdir -p "$BUILD_DIR"
ln -snf "${BUILD_DIR##*/}" build/current

SINATRA_PORT=9292
SINATRA_BASE_URL="http://localhost:$SINATRA_PORT"

GH_PAGES_REPO='shineyoureye-static'
GH_PAGES_USER='theyworkforyou'

# GH_PAGES_GIT_URL="https://github.com/$GH_PAGES_USER/$GH_PAGES_REPO.git"
GH_PAGES_GIT_URL="git@github.com:$GH_PAGES_USER/$GH_PAGES_REPO.git"

start_sinatra() {
    # Start the Sinatra server in the background:
    bundle exec rackup > "$BUILD_DIR/sinatra.log" 2>&1 &
    SINATRA_PID=$!
    echo "Waiting for Sinatra to start..."
    while ! nc -z localhost "$SINATRA_PORT"; do sleep 1; done
    # Make sure it's not an old one server still running:
    sleep 1
    kill -0 "$SINATRA_PID" ||
        { echo "Couldn't start Sinatra - is an old server running?"; exit 1; }
    echo "done"
}

stop_sinatra() {
    echo "Killing Sinatra (pid $SINATRA_PID)"
    kill "$SINATRA_PID"
    echo "done"
}

crawl_site() {
    echo "Crawling $SINATRA_BASE_URL...."
    (
        WGET_EXIT_CODE=0
        cd "$BUILD_DIR" &&
            wget -o wget.log -r -l 5 --domains='localhost' \
                 "$SINATRA_BASE_URL"/scraper-start-page.html || WGET_EXIT_CODE="$?"
    )
    echo done
}

deploy_site() {
    (
        cd "$BUILD_DIR"
        echo "Cloning: $GH_PAGES_GIT_URL"
        git clone --depth=1 "$GH_PAGES_GIT_URL" -b gh-pages
        cd "$GH_PAGES_REPO"
        git rm -r .
        # But keep the CNAME file!
        git checkout HEAD -- CNAME
        cp -R ../"${SINATRA_BASE_URL##*//}"/* .
        git add .
        # Annoyingly, files without an extension are served as
        # application/octet-stream, so find any files that look like
        # HTML (according to file(1)) and if they don't have a .html
        # extension, rename them so that they do.
        find . -name .git -prune -o -print | while read filename
        do
            if ! [ x"${filename: -5}" = x.html ]
            then
                if [ "$(file -b --mime-type "$filename")" = 'text/html' ]
                then
                    git mv -f $filename "${filename}.html"
                fi
            fi
        done
        git commit --author="Demoracy Sites Team <parliaments@mysociety.org>" -m "Automated commit of generated static site data

The shineyoureye-sinatra version was: $PROSE_VERSION
The shineyoureye-prose version was: $SYE_SINATRA_VERSION"
        git push origin HEAD
    )
}

bin/prepare-data

# Save the versions of the prose repository and this repository so
# that we can include them in the eventual commit message.
PROSE_VERSION="$(cd prose && git rev-parse HEAD)"
SYE_SINATRA_VERSION="$(git rev-parse HEAD)"

start_sinatra

crawl_site

stop_sinatra

if [ "$ONLY_BUILD" != 1 ]
then
    deploy_site
fi

if [ "$WGET_EXIT_CODE" != 0 ]
then
    echo "The errors were:"
    egrep -B 3 ' ERROR [0-9]{3}' "$BUILD_DIR/wget.log"
    exit $WGET_EXIT_CODE
fi
